import type { Metadata } from "next";
import { IBM_Plex_Mono, Poppins, Roboto } from "next/font/google";

import i18nConfig from '@/i18nConfig';
import TranslationsProvider from "@/components/TranslationsProvider"
import Header from "@/module/Header/Header";
import Footer from "@/module/Footer/Footer";
import QueryProvider from "@/components/query-provider";
import initTranslations from "../i18n";

import "./globals.css";
import 'aos/dist/aos.css';

const poppins = Poppins({ subsets: ["latin"], weight: ["400", "500", "700"], variable: "--font-poppins" });
const roboto = Roboto({ subsets: ["latin"], weight: ["400", "500", "700"], variable: "--font-roboto" });
const ibm_mono = IBM_Plex_Mono({ subsets: ["latin"], weight: ["400", "500", "700"], variable: "--font-ibm_mono" });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const i18nNamespaces = ['common', "home", "nav"]

export function generateStaticParams() {
  return i18nConfig.locales.map(locale => ({ locale }));
}

export default async function RootLayout({
  children,
  params: { locale }
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string }
}>) {

  const { resources } = await initTranslations(locale, i18nNamespaces);
  return (
    <html lang={locale} dir={locale === "ar" ? "rtl" : "ltr"} >
      <body className={`${poppins.variable} ${roboto.variable} ${ibm_mono.variable} font-roboto bg-gray-300 `}>
         <QueryProvider>
         <TranslationsProvider
          namespaces={i18nNamespaces}
          locale={locale}
          resources={resources}>
          <>
            <Header />
            {children}
            <Footer />
          </>
        </TranslationsProvider>
         </QueryProvider>
      </body>
    </html>
  );
}
